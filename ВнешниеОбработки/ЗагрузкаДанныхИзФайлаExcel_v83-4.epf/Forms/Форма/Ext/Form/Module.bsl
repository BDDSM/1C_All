Перем СписокСтрок;
Перем ВременныйКаталог;
Перем РегистраторАП;
Перем РегистраторГород;
Перем РегистраторСтрана;

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ Файл.Существует() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден файл!", Объект, "ПутьКФайлу", Истина);
		Возврат;
	КонецЕсли;
	
	Состояние("Загрузка файла...");
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
	ПрочитатьФайл(Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайл(Адрес)
	
	ЛистЭкзеля.Очистить();
	
	ВремФайл = ПолучитьИмяВременногоФайла("xlsx");
	ДД = ПолучитьИзВременногоХранилища(Адрес);
	ДД.Записать(ВремФайл);
	
	Если НЕ ОткрытьФайлОбъект(ВремФайл) Тогда
		Сообщить("Файл " + ПутьКФайлу + " не открыт!");
		УдалитьФайлы(ВремФайл);
		Возврат;
	КонецЕсли;
	
	Если НЕ ОткрытьЛист(1) Тогда
		Сообщить("Лист 1 не открыт!");
		УдалитьФайлы(ВремФайл);
		Возврат;
	КонецЕсли;
	
	УдалитьФайлы(ВремФайл)
	
КонецПроцедуры

&НаСервере
Функция ОткрытьФайлОбъект(ПутьКФайлу)
	
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ Файл.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ФайлЭкзель = ПутьКФайлу;
	ВременныйКаталог = КаталогВременныхФайлов() + "\Excel2007";
	УдалитьФайлы(ВременныйКаталог);
	
	РаспаковатьФайл(ФайлЭкзель, ВременныйКаталог);
	
	ФайлСтрок = ВременныйКаталог + "\xl\sharedStrings.xml";
	СписокСтрок = ПрочитатьСписокСтрок(ФайлСтрок);
	
	Возврат Истина
	
КонецФункции

&НаСервере
Процедура РаспаковатьФайл(Файл, Каталог)
	
	Зип = Новый ЧтениеZipФайла;
	Зип.Открыть(Файл);
	Зип.ИзвлечьВсе(Каталог, РежимВосстановленияПутейФайловZIP.Восстанавливать)
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьСписокСтрок(ФайлСтрок)
	
	Строки = Новый СписокЗначений;
	
	хмл = Новый ЧтениеXML;
	хмл.ОткрытьФайл(ФайлСтрок);
	
	Пока хмл.Прочитать() Цикл
		Если хмл.ТипУзла = ТипУзлаXML.Текст Тогда
			Строки.Добавить(хмл.Значение);
		КонецЕсли;
	КонецЦикла;
	
	хмл.Закрыть();
	
	Возврат Строки
	
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеИКАО(ИКАО)
		
	СпрКодИКАО = Справочники.ИКАО_ВС.НайтиПоКоду(ИКАО);
	
	Если СпрКодИКАО.Пустая() Тогда 
		ЭлементСпрИКАО = Справочники.ИКАО_ВС.СоздатьЭлемент();
		ЭлементСпрИКАО.Код = ИКАО;
		ЭлементСпрИКАО.Наименование = ИКАО; 
		Попытка
			ЭлементСпрИКАО.Записать();
			Возврат ЭлементСпрИКАО 
		Исключение
		КонецПопытки;
	Иначе 
		Возврат СпрКодИКАО 
	КонецЕсли

КонецФункции 


&НаСервере
Функция ПолучитьДеревоДанных(Файл)
	
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Объект");
	ДеревоДанных.Колонки.Добавить("Значение");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	
	ТекЭлемент = Неопределено;
	ТекБаза = Неопределено;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РежимЗагрузки = ЧтениеXML.Имя;
			
			Если ТекЭлемент = Неопределено Тогда
				ТекЭлемент = ДеревоДанных.Строки.Добавить();
				ТекЭлемент.Объект = РежимЗагрузки;
			Иначе
				ТекЭлемент = ТекЭлемент.Строки.Добавить();
				ТекЭлемент.Объект = РежимЗагрузки;					
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ТекЭлемент = Неопределено Тогда
				ТекЭлемент = Неопределено;
			Иначе
				ТекЭлемент = ТекЭлемент.Родитель;
			КонецЕсли;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			ТекЭлемент.Значение = ЧтениеXML.Значение;
		КонецЕсли;
		
		Для сч = 0 По ЧтениеXML.КоличествоАтрибутов() - 1 Цикл
			Стр = ТекЭлемент.Строки.Добавить();
			Стр.Объект = ЧтениеXML.ИмяАтрибута(сч);
			Стр.Значение = ЧтениеXML.ЗначениеАтрибута(сч);
		КонецЦикла;
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат ДеревоДанных
	
КонецФункции

&НаСервере
Функция ПолучитьМассивБукв()
	
	МассивБукв = Новый Массив;
		МассивБукв.Добавить("A");
		МассивБукв.Добавить("B");
		МассивБукв.Добавить("C");
		МассивБукв.Добавить("D");
		МассивБукв.Добавить("E");
		МассивБукв.Добавить("F");
		МассивБукв.Добавить("G");
		МассивБукв.Добавить("H");
		МассивБукв.Добавить("I");
		МассивБукв.Добавить("J");
		МассивБукв.Добавить("K");
		МассивБукв.Добавить("L");
		МассивБукв.Добавить("M");
		МассивБукв.Добавить("N");
		МассивБукв.Добавить("O");
		МассивБукв.Добавить("P");
		МассивБукв.Добавить("Q");
		МассивБукв.Добавить("R");
		МассивБукв.Добавить("S");
		МассивБукв.Добавить("T");
		МассивБукв.Добавить("U");
		МассивБукв.Добавить("V");
		МассивБукв.Добавить("W");
		МассивБукв.Добавить("X");
		МассивБукв.Добавить("Y");
		МассивБукв.Добавить("Z");
	
	Возврат МассивБукв
	
КонецФункции

&НаСервере
Функция ОткрытьЛист(НомерЛиста) Экспорт
	
	ФайлЛиста = ВременныйКаталог + "\xl\worksheets\sheet" + НомерЛиста + ".xml";
	Файл = Новый Файл(ФайлЛиста);
	Если НЕ Файл.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивБукв = ПолучитьМассивБукв();
	ДеревоДанных = ПолучитьДеревоДанных(ФайлЛиста);
	//ДеревоДанных.ВыбратьСтроку();
	
	//создаем колонки
	Колонки = ДеревоДанных.Строки.Найти("cols", "Объект", Истина);
	
	//читаем строки
	СтрСтрок = ДеревоДанных.Строки.Найти("sheetData", "Объект", Истина);
	Для Каждого Строка Из СтрСтрок.Строки Цикл
		СтруктураДанныхПолей  = Новый Структура;
		ИндексСтроки = -1;
		
			Для Каждого Колонка Из Строка.Строки Цикл
				
				Если Колонка.Объект <> "c" Тогда
					Продолжить;
				КонецЕсли;
				
				ЗначениеЯчейки = Неопределено;
				ИндексСтроки = ИндексСтроки + 1;
				
				СтрЗначение = Колонка.Строки.Найти("v", "Объект");
				Если СтрЗначение <> Неопределено Тогда
					ЗначениеЯчейки = СтрЗначение.Значение;
				КонецЕсли;
				
				СтрЗначение = Колонка.Строки.Найти("t", "Объект");
				Если СтрЗначение <> Неопределено И СтрЗначение.Значение = "s" И ЗначениеЯчейки <> Неопределено Тогда
					ЗначениеЯчейки = СписокСтрок.Получить(Число(ЗначениеЯчейки)).Значение;
				КонецЕсли;
				
					// 1е поле - 4-Х значн код icao (ICAO — International Civil Aviation Organization — Международная организация гражданской авиации. http://www.icao.int)
					// 2е поле - 3-Х значн код  AITA Код аэропорта ИАТА — трёхбуквенный уникальный идентификатор, присваиваемый аэропортам мира Международной ассоциацией воздушного транспорта (ИАТА)
					// 3е поле - Рус наименование АП
					// 4е поле - АНГЛ наименование АП
					// 5е поле - Рус наименование ГОРОД
					// 6е поле - АНГЛ наименование ГОРОД
					// 7е поле - Рус наименование СТРАНА
					// 8е поле - АНГЛ наименование СТРАНА
					// 9е поле - Time Zone
					// 10е поле- Местное время от UTC
					Если МассивБукв[ИндексСтроки] = "A" Тогда 
						СтруктураДанныхПолей.Вставить("КодICAO",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "B" Тогда 
						СтруктураДанныхПолей.Вставить("КодAITA",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "C" Тогда 
						СтруктураДанныхПолей.Вставить("РусНаименованиеАП",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "D" Тогда 
						СтруктураДанныхПолей.Вставить("АнглНаименованиеАП",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "E" Тогда 
						СтруктураДанныхПолей.Вставить("РусНаименованиеГород",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "F" Тогда 
						СтруктураДанныхПолей.Вставить("АнглНаименованиеГород",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "G" Тогда 
						СтруктураДанныхПолей.Вставить("РусНаименованиеСтрана",ЗначениеЯчейки)
					ИначеЕсли МассивБукв[ИндексСтроки] = "H" Тогда 
						СтруктураДанныхПолей.Вставить("АнглНаименованиеСтрана",ЗначениеЯчейки);
					ИначеЕсли МассивБукв[ИндексСтроки] = "I" Тогда 
						СтруктураДанныхПолей.Вставить("TimeZone",ЗначениеЯчейки);
					ИначеЕсли МассивБукв[ИндексСтроки] = "J" Тогда 
						СтруктураДанныхПолей.Вставить("МестноеВремяОтUTC",ЗначениеЯчейки);
					КонецЕсли;
				КонецЦикла;
			Если ЗначениеЗаполнено(СтруктураДанныхПолей) Тогда 
				ПроверкаИДобавлениеДанныхСправочника(СтруктураДанныхПолей)				
			КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

// Аропорт
&НаСервере
Функция ПроверкаИДобавлениеДанныхСправочника(СтруктураДанныхПолей)
	
	
	Если НЕ ЗначениеЗаполнено(Справочники.Аэропорты.НайтиПоРеквизиту("НаименованиеАнглийское",СтруктураДанныхПолей.АнглНаименованиеАП)) Тогда 
		
		Сообщить(" Создается новая карточка АП: " + СтруктураДанныхПолей.АнглНаименованиеАП);
	
		НовыйСправочникАП = Справочники.Аэропорты.СоздатьЭлемент();
		НовыйСправочникАП.IATA = СтруктураДанныхПолей.КодAITA;
		НовыйСправочникАП.Владелец = ПолучитьСсылкуГорода(СтруктураДанныхПолей);
		НовыйСправочникАП.Код = СтруктураДанныхПолей.КодICAO;
		НовыйСправочникАП.Наименование = СтруктураДанныхПолей.РусНаименованиеАП;
		НовыйСправочникАП.НаименованиеАнглийское = СтруктураДанныхПолей.АнглНаименованиеАП;
		Попытка
			НовыйСправочникАП.Записать();
		Исключение
			Сообщить("Не удалось записать АП: " + СтруктураДанныхПолей.АнглНаименованиеАП)
		КонецПопытки;
	Иначе 
		Сообщить("Такой АП уже есть: " + СтруктураДанныхПолей.АнглНаименованиеАП);

		
КонецЕсли;		
		
КонецФункции

// /Город
&НаСервере
Функция ПолучитьСсылкуГорода(СтруктураДанныхПолей)
	
	Если ЗначениеЗаполнено(Справочники.Города.НайтиПоРеквизиту("НаименованиеАнглийское",СтруктураДанныхПолей.АнглНаименованиеГород)) Тогда
		Сообщить("Такой Город уже есть: " + СтруктураДанныхПолей.АнглНаименованиеГород);
		Возврат Справочники.Города.НайтиПоРеквизиту("НаименованиеАнглийское",СтруктураДанныхПолей.АнглНаименованиеГород)
	Иначе 
		
		Сообщить("Создается новая карточка Города: " + СтруктураДанныхПолей.АнглНаименованиеГород);
		
	НовыйГород = Справочники.Города.СоздатьЭлемент();
	НовыйГород.Владелец = ПолучитьСсылкуСтраны(СтруктураДанныхПолей);
	НовыйГород.ЧасовойПояс = Строка(СтруктураДанныхПолей.TimeZone); // "UTC"; // + СтруктураДанныхПолей.АнглНаименованиеСтрана + "/" +  СтруктураДанныхПолей.АнглНаименованиеГород;
	НовыйГород.Наименование = СтруктураДанныхПолей.РусНаименованиеГород;
	НовыйГород.НаименованиеАнглийское = СтруктураДанныхПолей.АнглНаименованиеГород;
	НовыйГород.УстановитьНовыйКод();
		Попытка
			НовыйГород.Записать();
			Возврат НовыйГород.Ссылка
		Исключение
			Сообщить("Не удалось сохранить Город: " + СтруктураДанныхПолей.АнглНаименованиеГород);
		КонецПопытки;
	КонецЕсли;

КонецФункции

// Страна
&НаСервере
Функция ПолучитьСсылкуСтраны(СтруктураДанныхПолей)
	
	Если ЗначениеЗаполнено(Справочники.Страны.НайтиПоРеквизиту("НаименованиеАнглийское",СтруктураДанныхПолей.АнглНаименованиеСтрана)) Тогда
				
		Сообщить("Такая страна уже есть: " + СтруктураДанныхПолей.АнглНаименованиеСтрана);
		Возврат Справочники.Страны.НайтиПоРеквизиту("НаименованиеАнглийское",СтруктураДанныхПолей.АнглНаименованиеСтрана)
	Иначе
		
		Сообщить("Создается новая карточка Страна: " + СтруктураДанныхПолей.АнглНаименованиеСтрана);
		
		НаваяСтрана = Справочники.Страны.СоздатьЭлемент();
		НаваяСтрана.Наименование = СтруктураДанныхПолей.РусНаименованиеСтрана;
		НаваяСтрана.НаименованиеАнглийское = СтруктураДанныхПолей.АнглНаименованиеСтрана;
		НаваяСтрана.Код = Лев(СтруктураДанныхПолей.АнглНаименованиеСтрана, 3);  // 2 надо уточнить 
		 Попытка
			 НаваяСтрана.Записать();
			 Возврат НаваяСтрана.Ссылка
		 Исключение
			 Сообщить("Не удалось сохаринть Страна :" + СтруктураДанныхПолей.АнглНаименованиеСтрана);
		 КонецПопытки	
	 КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = "c:\";
	Диалог.Фильтр = "Файл Excel 2007 (*.xlsx)|*.xlsx";
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры
