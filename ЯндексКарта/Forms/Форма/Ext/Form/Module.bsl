
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


&НаКлиенте
Процедура ОбновитьФорму()
	
	Элементы.ДобавитьМетку.Доступность = (БалунОткрыт <> Неопределено);
	
	КоличествоМеток = Объект.Метки.Количество();
	Элементы.ПоказатьВсе.Доступность = (КоличествоМеток > 0);
	Элементы.ОчиститьВсе.Доступность = (КоличествоМеток > 0);
	
	ТекущаяСтрока = Элементы.Метки.ТекущаяСтрока;
	Элементы.УдалитьМетку.Доступность = (ТекущаяСтрока <> Неопределено) И (КоличествоМеток > 0);
	Элементы.МеткиКонтекстноеМенюУдалитьМетку.Доступность = (ТекущаяСтрока <> Неопределено) И (КоличествоМеток > 0);
	
КонецПроцедуры
	

&НаКлиенте
Процедура ДобавитьЭлементУправления(ИмяЭлемента)
	
	Элементы.ЯндексКарта.Документ.parentWindow.eval("if(theMap){theMap.showControl('" + ИмяЭлемента + "')}");
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьЭлементУправления(ИмяЭлемента)
	
	Элементы.ЯндексКарта.Документ.parentWindow.eval("if(theMap){theMap.hideControl('" + ИмяЭлемента + "')}");
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьТипКарты(НовыйТип)
	
	Элементы.ЯндексКарта.Документ.parentWindow.eval("if(theMap){theMap.setType('" + НовыйТип + "')}");
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция СтрокаЗапросаЯндекс(СтрокаАдреса)
	
	Возврат "http://geocode-maps.yandex.ru/1.x/?geocode=" + СтрокаАдреса;
	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Функция ОтветГеокодераВСписокЗначение(ПутьКФайлу, КоличествоОбрабатываемых=0)
	
	Результат = Новый СписокЗначений;
	
	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.ОткрытьФайл(ПутьКФайлу); 
	
	ПостроительDOM = Новый ПостроительDOM;
	
	Попытка
		ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
		Узлы = ДокументDOM.ПолучитьЭлементыПоИмени("GeoObject");
		Сч = 1;
		Для Каждого Узел Из Узлы Цикл
			
			Если КоличествоОбрабатываемых > 0 И Сч > КоличествоОбрабатываемых Тогда 
				Прервать;
			КонецЕсли;
			
			СписокДочернихУлов = Узел.ПолучитьЭлементыПоИмени("*", "*");
			
			СтруктураАдреса = Новый Структура("Категория,Точность,Представление,Страна,Регион,Город,Улица,Дом,Владение,Корпус,Строение,Долгота,Широта,Название,Описание");
			Для Каждого ДочернийУзел Из СписокДочернихУлов Цикл
				
				Если ДочернийУзел.ИмяУзла = "text" Тогда
					
					СтруктураАдреса.Представление = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "CountryName" Тогда
					
					СтруктураАдреса.Страна = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "AdministrativeAreaName" Тогда
					
					СтруктураАдреса.Регион = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "LocalityName" Тогда
					
					СтруктураАдреса.Город = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "ThoroughfareName" Тогда
					
					СтруктураАдреса.Улица = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "PremiseNumber" Тогда
					
					СтруктураАдреса.Дом	= ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "name" Тогда
					
					СтруктураАдреса.Название = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "description" Тогда
					
					СтруктураАдреса.Описание = ДочернийУзел.ТекстовоеСодержимое;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "kind" Тогда
					
					// kind: Категория 0-Адрес, 1-Улица, 2-Прочее
					//		house (отдельный дом, точный адрес)
					//		street (улица)
					//		metro (станция метро)
					//		district (район города)
					//		locality (населённый пункт: город/поселок/деревня/село/...)
					//		area (район области)
					//		province (область)
					//		country (страна)
					//		hydro (река,озеро,ручей,водохранилище...)
					//		railway (ж.д. станция)
					//		route (линия метро/шоссе/ж.д. линия)
					//		vegetation (лес,парк...)
					//		cemetery (кладбище)
					//		bridge (мост)
					//		km (километр шоссе)
					//		other (разное)
					
					Если ДочернийУзел.ТекстовоеСодержимое = "house" Тогда 
						СтруктураАдреса.Категория = "Адрес";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "street" Тогда
						СтруктураАдреса.Категория = "Улица";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "metro" Тогда
						СтруктураАдреса.Категория = "Станция метро";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "district" Тогда
						СтруктураАдреса.Категория = "Район города";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "locality" Тогда
						СтруктураАдреса.Категория = "Город, населённый пункт";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "area" Тогда
						СтруктураАдреса.Категория = "Район области";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "province" Тогда
						СтруктураАдреса.Категория = "Область";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "country" Тогда
						СтруктураАдреса.Категория = "Страна";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "hydro" Тогда
						СтруктураАдреса.Категория = "Река, озеро и т.п.";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "railway" Тогда
						СтруктураАдреса.Категория = "Ж.д. станция";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "route" Тогда
						СтруктураАдреса.Категория = "Линия метро/шоссе/ж.д. линия";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "vegetation" Тогда
						СтруктураАдреса.Категория = "Лес, парк и т.п.";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "cemetery" Тогда
						СтруктураАдреса.Категория = "Кладбище";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "bridge" Тогда
						СтруктураАдреса.Категория = "Мост";
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "km" Тогда
						СтруктураАдреса.Категория = "Километр шоссе";
					Иначе
						СтруктураАдреса.Категория = "Другое";
					КонецЕсли;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "precision" Тогда
					
					// precision: Точность нахождения
					//		0-exact (точное соответствие)
					//		1-number (совпадает только номер дома)
					//		2-near (найден дом поблизости)
					//		3-street (найдена улица)
					//		4-other (улица не найдена, но найден, например, посёлок, район и т.д.)
					
					Если ДочернийУзел.ТекстовоеСодержимое = "exact" Тогда
						СтруктураАдреса.Точность = 0;
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "number" Тогда
						СтруктураАдреса.Точность = 1;		
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "near" Тогда
						СтруктураАдреса.Точность = 2;		
					ИначеЕсли ДочернийУзел.ТекстовоеСодержимое = "street" Тогда
						СтруктураАдреса.Точность = 3;		
					Иначе
						СтруктураАдреса.Точность = 4;		
					КонецЕсли;
					
				ИначеЕсли ДочернийУзел.ИмяУзла = "pos" Тогда
					
					Стр = ДочернийУзел.ТекстовоеСодержимое;
					Поз = Найти(ДочернийУзел.ТекстовоеСодержимое, " ");
					СтруктураАдреса.Широта = Число(Лев(Стр, Поз-1));
					СтруктураАдреса.Долгота = Число(Сред(Стр, Поз+1));
					
				КонецЕсли;
				
			КонецЦикла;
			
			Результат.Добавить(СтруктураАдреса, СтруктураАдреса.Представление);
			Сч = Сч + 1;
			
		КонецЦикла;
		
	Исключение
		//Описание ошибки
	КонецПопытки;
	
	ЧтениеXML.Закрыть();
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Функция ОтветГеокодера(СтрокаАдреса, КоличествоОбрабатываемых=0)
	
	РезультатПолученияФайлов = ПолучениеФайловИзИнтернетаКлиент.СкачатьФайлНаКлиенте(СтрокаЗапросаЯндекс(СтрокаАдреса));
	
	Если НЕ РезультатПолученияФайлов.Статус Тогда 
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	Возврат ОтветГеокодераВСписокЗначение(РезультатПолученияФайлов.Путь, КоличествоОбрабатываемых);
	
КонецФункции


&НаКлиенте
Процедура ОбновитьМеткуНаЯндексКарте(Идентификатор, Название, Описание, ОткрыватьБалун=Ложь)
	
	Элементы.ЯндексКарта.Документ.parentWindow.eval(
		"if(theMap){
		|	var p=theMap.getPlacemarkById('" + Идентификатор + "');
		|	if(p){
		|		p.properties.set('balloonContent', '<b>" + Название + "</b><div>" + Описание + "</div>')
		|	    p.options.set('preset',p.properties.get('selected')?'twirl#redStretchyIcon':'twirl#brownStretchyIcon');
		|		p.properties.set('original','twirl#brownStretchyIcon');
		|	};
		|" + ?(ОткрыватьБалун, "p.balloon.open()", "") + "}");
	
КонецПроцедуры


&НаКлиенте
Функция УдалитьОбъектНаЯндексКарте(Идентификатор)
	
	Попытка
		Элементы.ЯндексКарта.Документ.parentWindow.eval(
			"if(theMap){
			|	if(theMap.balloon.isOpen()){theMap.balloon.close();}
			|	var p=theMap.getPlacemarkById('" + Идентификатор + "');
			|	if(p){theMap.geoObjects.remove(p);p=null;}
			|}");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции


&НаКлиенте
Процедура ОбновитьОбъектыНаЯндексКарте()
	
	Для Каждого Метка Из Объект.Метки Цикл
		
		Попытка
			Элементы.ЯндексКарта.Документ.parentWindow.eval(
				"if(theMap){
				|	if(theMap.balloon.isOpen()){theMap.balloon.close();}
				|	var p=theMap.getPlacemarkById('" + Метка.Идентификатор + "');
				|	if(p){p.properties.set('iconContent','" + Формат(Метка.НомерСтроки, "ЧГ=") + "')}
				|}");
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Функция СоздатьМеткуНаЯндексКарте(Номер, Идентификатор, Долгота, Широта, Название, Описание, ТипМетки=Неопределено)
	
	Попытка
		Элементы.ЯндексКарта.Документ.parentWindow.eval(
			"if(theMap){
			|	if(theMap.balloon.isOpen()){theMap.balloon.close();}
			|	var p=new ymaps.Placemark([" + СтрЗаменить(Формат(Долгота, "ЧГ="), ",", ".") + "," + СтрЗаменить(Формат(Широта, "ЧГ="), ",", ".") + "],{
			|			iconContent:'" + Формат(Номер, "ЧГ=") + "',
			|			id:'" + Идентификатор + "',
			|			balloonContent:'<b>" + Название + "</b><div>" + Описание + "</div>'
			|		},{
			|			preset:'" + ?(ЗначениеЗаполнено(ТипМетки), ТипМетки, "twirl#blackStretchyIcon") + "',
			|			draggable:true
			|		}
			|	);
			|	theMap.geoObjects.add(p);
			|	p.events.add('click',function(e){
			|		var t=e.get('target');
			|		var coords=t.geometry.getCoordinates();
			|		var m=t.getMap();
			|		m.selectPlacemark(t);
	    	|		m.doClick('select',coords[0],coords[1],t.properties.get('id'));
			|	});
			|	p.events.add('dragstart',function(e){
			|		var m=e.get('target').getMap();
			|		if(m.balloon.isOpen()){m.balloon.close();};
			|	});
			|	p.events.add('dragend',function(e){
			|		var t=e.get('target');
			|		var coords=t.geometry.getCoordinates();
			|		var m=t.getMap();
			|		m.selectPlacemark(t);
	    	|		m.doClick('dragged',coords[0],coords[1],t.properties.get('id'));
			|	});
			|}");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции


&НаКлиенте
Процедура ОбновитьДанныеМетки(Идентификатор, Долгота, Широта)
	
	НайденныеСтроки = Объект.Метки.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	Если НайденныеСтроки.Количество() > 0 Тогда 
		
		ТекущаяМетка = НайденныеСтроки[0];
		НоваяТекущаяСтрока = ТекущаяМетка.ПолучитьИдентификатор();
		
		Если НоваяТекущаяСтрока <> Элементы.Метки.ТекущаяСтрока Тогда 
			Элементы.Метки.ТекущаяСтрока = НоваяТекущаяСтрока;
		КонецЕсли;
		
		ОтветГеокодера = ОтветГеокодера(СтрЗаменить(Формат(Широта, "ЧГ="), ",", ".") + "," + СтрЗаменить(Формат(Долгота, "ЧГ="), ",", "."), 1);
		Если ОтветГеокодера.Количество() > 0 Тогда
			Ответ = ОтветГеокодера[0].Значение;
			ЗаполнитьЗначенияСвойств(ТекущаяМетка, Ответ);
			ТекущаяМетка.ЭтоРезультатПоиска = Ложь;
			ОбновитьМеткуНаЯндексКарте(Идентификатор, Ответ.Название, Ответ.Описание, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура АктивацияМетки(Идентификатор)
	
	НайденныеСтроки = Объект.Метки.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор));
	Если НайденныеСтроки.Количество() > 0 Тогда 
		
		ТекущаяМетка = НайденныеСтроки[0];
		НоваяТекущаяСтрока = ТекущаяМетка.ПолучитьИдентификатор();
		
		Если НоваяТекущаяСтрока <> Элементы.Метки.ТекущаяСтрока Тогда
			НеОбрабатыватьАктивациюСтроки = Истина;
			Элементы.Метки.ТекущаяСтрока = НоваяТекущаяСтрока;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ИнициализацияЯндексКарты()
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	
	ДвоичныеДанныеКартинки = ЭтотОбъект.ПолучитьМакет("ПоказатьВсе");
	НавигационнаяСсылкаКартинки = ПоместитьВоВременноеХранилище(Новый Картинка(ДвоичныеДанныеКартинки));
	
	ЯндексМакет = ЭтотОбъект.ПолучитьМакет("HTML");
	ЯндексКарта = СтрЗаменить(ЯндексМакет.ПолучитьТекст(), "%КартинкаИнформация%", НавигационнаяСсылкаКартинки);

КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьПоиск()
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаПоиска = СокрЛП(СтрокаПоиска);

	Попытка
		
		УдаляемыеСтроки = Объект.Метки.НайтиСтроки(Новый Структура("ЭтоРезультатПоиска", Истина));
		Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
			УдалитьОбъектНаЯндексКарте(УдаляемаяСтрока.Идентификатор);
			Объект.Метки.Удалить(УдаляемаяСтрока);
		КонецЦикла;
		
		ОтветГеокодера = ОтветГеокодера(СтрокаПоиска);
		Сч = 1;
		ПервыйИдентификатор = "";
		
		Для Каждого Ответ Из ОтветГеокодера Цикл
			
			Идентификатор = Строка(Новый УникальныйИдентификатор);
			ОписаниеОбъекта = Ответ.Значение;
			
			Если СоздатьМеткуНаЯндексКарте(Сч, Идентификатор, ОписаниеОбъекта.Долгота, ОписаниеОбъекта.Широта, ОписаниеОбъекта.Название, ОписаниеОбъекта.Описание) Тогда
				
				НоваяСтрока = Объект.Метки.Вставить(Сч - 1);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Ответ.Значение);
				НоваяСтрока.Идентификатор = Идентификатор;
				НоваяСтрока.ЭтоРезультатПоиска = Истина;
				Если ПустаяСтрока(ПервыйИдентификатор) Тогда 
					ПервыйИдентификатор = Идентификатор;
				КонецЕсли;
				
				Сч = Сч + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(ПервыйИдентификатор) Тогда 
			НайденныеСтроки = Объект.Метки.НайтиСтроки(Новый Структура("Идентификатор", ПервыйИдентификатор));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				Элементы.Метки.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
		
	Исключение
	КонецПопытки;
	
	ОбновитьОбъектыНаЯндексКарте();
	ОбновитьФорму();
	
	// Удалим элемент из истории поиска если он там был
	НомерНайденногоЭлементаСписка = Элементы.СтрокаПоиска.СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	Пока НомерНайденногоЭлементаСписка <> Неопределено Цикл
		Элементы.СтрокаПоиска.СписокВыбора.Удалить(НомерНайденногоЭлементаСписка);
		НомерНайденногоЭлементаСписка = Элементы.СтрокаПоиска.СписокВыбора.НайтиПоЗначению(СтрокаПоиска);
	КонецЦикла;
	
	// Поставим его на первое место, ограничив список 100 записями
	Элементы.СтрокаПоиска.СписокВыбора.Вставить(0, СтрокаПоиска);
	Пока Элементы.СтрокаПоиска.СписокВыбора.Количество() > 100 Цикл
		Элементы.СтрокаПоиска.СписокВыбора.Удалить(Элементы.СтрокаПоиска.СписокВыбора.Количество() - 1);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьВсеМетки()
	
	Если Объект.Метки.Количество() > 0 Тогда
		Попытка
			Элементы.ЯндексКарта.Документ.parentWindow.eval(
				"if(theMap){
				|	theMap.setBounds(
				|		theMap.geoObjects.getBounds(),{
			    |			checkZoomRange:true,
			    |			callback:function(err){if(err){return true;}}
			    |		}
				|	)
				|}");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодсистемаСтандартныеПодсистемы = Метаданные.Подсистемы.Найти("СтандартныеПодсистемы");
	Если ПодсистемаСтандартныеПодсистемы = Неопределено Тогда 
		Сообщить(НСтр("ru = 'Обработка предназначена для конфигураций, написанных на базе БСП'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПодсистемаПолучениеФайловИзИнтернета = ПодсистемаСтандартныеПодсистемы.Подсистемы.Найти("ПолучениеФайловИзИнтернета");
	Если ПодсистемаПолучениеФайловИзИнтернета = Неопределено Тогда 
		Сообщить(НСтр("ru = 'Не найдена подсистема ""Получение файлов из Интернета""'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТипКарты = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"ТипКарты",
		"yandex#map");
		
	Если Элементы.ТипКарты.СписокВыбора.НайтиПоЗначению(ТипКарты) = Неопределено Тогда 
		ТипКарты = "yandex#map";
	КонецЕсли;
	
	СтандартныйНаборКнопок = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"СтандартныйНаборКнопок",
		Истина);
	
	ПолзунокМасштаба = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"ПолзунокМасштаба",
		Истина);
	
	МасштабнаяЛинейка = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"МасштабнаяЛинейка",
		Ложь);
	
	ОбзорнаяКарта = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"ОбзорнаяКарта",
		Ложь);
	
	Пробки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиЯндексКарты",
		"Пробки",
		Ложь);
		
	ИсторияПоиска = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиЯндексКарты", "История");
	Если ИсторияПоиска <> Неопределено Тогда
		Элементы.СтрокаПоиска.СписокВыбора.ЗагрузитьЗначения(ИсторияПоиска);
	КонецЕсли;
		
	ИнициализацияЯндексКарты();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьФорму();
	
КонецПроцедуры


&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"ТипКарты",
		ТипКарты);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"СтандартныйНаборКнопок",
		СтандартныйНаборКнопок);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"ПолзунокМасштаба",
		ПолзунокМасштаба);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"МасштабнаяЛинейка",
		МасштабнаяЛинейка);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"ОбзорнаяКарта",
		ОбзорнаяКарта);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"Пробки",
		Пробки);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"НастройкиЯндексКарты",
		"История",
		Элементы.СтрокаПоиска.СписокВыбора.ВыгрузитьЗначения());
		
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()

	НеОбрабатыватьАктивациюСтроки = Истина;
	ПриЗакрытииНаСервере();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ


&НаКлиенте
Процедура ЯндексКартаДокументСформирован(Элемент)
	
	Если НЕ ИницализацияКарты Тогда 
		ИницализацияКарты = Истина;
	Иначе
		Элементы.ЯндексКарта.Документ.parentWindow.eval(
			"ymaps.ready(function(){" +
				// После завершения загрузки карты отображаются элементы управления и устанавливается тип карты
				?(СтандартныйНаборКнопок, "if(theMap){theMap.showControl('mapTools')};", "") +
				?(ПолзунокМасштаба, "if(theMap){theMap.showControl('zoomControl')};", "") +
				?(МасштабнаяЛинейка, "if(theMap){theMap.showControl('scaleLine')};", "") +
				?(ОбзорнаяКарта, "if(theMap){theMap.showControl('miniMap')};", "") +
				?(Пробки, "if(theMap){theMap.showControl('trafficControl')};", "") +
				?(ПустаяСтрока(ТипКарты), "", "if(theMap){theMap.setType('" + ТипКарты + "')};") +
				// Пердается клик, что карта загружена
				"theMap.doClick('loaded');
			|})"
		);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура МеткиПриАктивизацииСтроки(Элемент)
	
	Если НеОбрабатыватьАктивациюСтроки Тогда
		НеОбрабатыватьАктивациюСтроки = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Метки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Попытка
		Элементы.ЯндексКарта.Документ.parentWindow.eval(
			"if(theMap){
			|	if(theMap.balloon.isOpen()){theMap.balloon.close();}
			|	var p=theMap.getPlacemarkById('" + ТекущиеДанные.Идентификатор + "');
			|	if(p){
			|		theMap.selectPlacemark(p);
			|		p.balloon.open();
			|	}
			|}");
	Исключение
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ТипКартыПриИзменении(Элемент)
	
	УстановитьТипКарты(ТипКарты);

КонецПроцедуры


&НаКлиенте
Процедура СтандартныйНаборКнопокПриИзменении(Элемент)
	
	Если СтандартныйНаборКнопок Тогда
		ДобавитьЭлементУправления("mapTools");
	Иначе
		УдалитьЭлементУправления("mapTools");
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ПолзунокМасштабаПриИзменении(Элемент)
	
	Если ПолзунокМасштаба Тогда
		ДобавитьЭлементУправления("zoomControl");
	Иначе
		УдалитьЭлементУправления("zoomControl");
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура МасштабнаяЛинейкаПриИзменении(Элемент)
	
	Если МасштабнаяЛинейка Тогда
		ДобавитьЭлементУправления("scaleLine");
	Иначе
		УдалитьЭлементУправления("scaleLine");
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ОбзорнаяКартаПриИзменении(Элемент)
	
	Если ОбзорнаяКарта Тогда
		ДобавитьЭлементУправления("miniMap");
	Иначе
		УдалитьЭлементУправления("miniMap");
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ПробкиПриИзменении(Элемент)
	
	Если Пробки Тогда 
		ДобавитьЭлементУправления("trafficControl");
	Иначе
		УдалитьЭлементУправления("trafficControl");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЯндексКартаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	ПоследняяКоманда = Элементы.ЯндексКарта.Документ.parentWindow.eval("theMap?theMap.getLastEvent():null");
	Если ТипЗнч(ПоследняяКоманда) = Тип("COMОбъект") Тогда 
		
		Попытка
			Если ПоследняяКоманда.event = "loaded" Тогда
				Если Объект.Метки.Количество() > 0 Тогда
					НеОбрабатыватьАктивациюСтроки = Истина;
					Для Каждого Метка Из Объект.Метки Цикл
						СоздатьМеткуНаЯндексКарте(
							Метка.НомерСтроки,
							Метка.Идентификатор,
							Метка.Долгота,
							Метка.Широта,
							Метка.Название,
							Метка.Описание,
							?(Метка.ЭтоРезультатПоиска, "twirl#blackStretchyIcon", "twirl#brownStretchyIcon"));
					КонецЦикла;
					ПоказатьВсеМетки();
					НеОбрабатыватьАктивациюСтроки = Истина;
					Элементы.Метки.ТекущаяСтрока = Неопределено;
					НеОбрабатыватьАктивациюСтроки = Ложь;
				КонецЕсли;
			ИначеЕсли ПоследняяКоманда.event = "openBalloon" Тогда
				БалунОткрыт = Новый Структура("Долгота,Широта", ПоследняяКоманда.lon, ПоследняяКоманда.lat);
			ИначеЕсли ПоследняяКоманда.event = "select" Тогда
				АктивацияМетки(ПоследняяКоманда.placemarkID);
			Иначе
				Если ПоследняяКоманда.event = "closeBalloon" Тогда
					БалунОткрыт = Неопределено;
				ИначеЕсли ПоследняяКоманда.event = "dragged" Тогда
					ОбновитьДанныеМетки(ПоследняяКоманда.placemarkID, ПоследняяКоманда.lon, ПоследняяКоманда.lat);
				КонецЕсли;
			КонецЕсли;
		Исключение
			БалунОткрыт = Неопределено;
		КонецПопытки;
		
		ОбновитьФорму();
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)

	ВыполнитьПоиск();
	
КонецПроцедуры


&НаКлиенте
Процедура СтрокаПоискаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Текст) Тогда 
		Возврат;
	КонецЕсли;
	ТекстПодбора = ВРег(СокрЛП(Текст));
	
	ДанныеВыбора = Новый СписокЗначений;
	
	КоличествоНайденных = 0;
	Для Каждого ЭлементСписка Из Элементы.СтрокаПоиска.СписокВыбора Цикл
		Если Найти(ВРег(ЭлементСписка.Значение), ТекстПодбора) = 1 Тогда 
			ДанныеВыбора.Добавить(ЭлементСписка.Значение);
			КоличествоНайденных = КоличествоНайденных + 1;
			Если КоличествоНайденных > 7 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ


&НаКлиенте
Процедура Поиск(Команда)

	ВыполнитьПоиск();
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьМетку(Команда)
	
	Если ТипЗнч(БалунОткрыт) <> Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	Идентификатор = Строка(Новый УникальныйИдентификатор);

	ОтветГеокодера = ОтветГеокодера(СтрЗаменить(Формат(БалунОткрыт.Широта, "ЧГ="), ",", ".") + "," + СтрЗаменить(Формат(БалунОткрыт.Долгота, "ЧГ="), ",", "."), 1);
	Если ОтветГеокодера.Количество() > 0 Тогда 
		
		ОписаниеОбъекта = ОтветГеокодера[0].Значение;
		
		Идентификатор = Строка(Новый УникальныйИдентификатор);
		НомерСтроки = Объект.Метки.Количество() + 1;
		
		Если СоздатьМеткуНаЯндексКарте(НомерСтроки, Идентификатор, ОписаниеОбъекта.Долгота, ОписаниеОбъекта.Широта, ОписаниеОбъекта.Название, ОписаниеОбъекта.Описание, "twirl#brownStretchyIcon") Тогда
			НоваяСтрока = Объект.Метки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОбъекта);
			НоваяСтрока.Идентификатор = Идентификатор;
			НоваяСтрока.ЭтоРезультатПоиска = Ложь;
			АктивацияМетки(Идентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьМетку(Команда)
	
	ТекущиеДанные = Элементы.Метки.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если УдалитьОбъектНаЯндексКарте(ТекущиеДанные.Идентификатор) Тогда 
		Объект.Метки.Удалить(ТекущиеДанные);
	КонецЕсли;
	
	ОбновитьОбъектыНаЯндексКарте();
	ОбновитьФорму();
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьВсе(Команда)

	ПоказатьВсеМетки();
	
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьВсе(Команда)

	Для Каждого Метка ИЗ Объект.Метки Цикл 
		УдалитьОбъектНаЯндексКарте(Метка.Идентификатор);
	КонецЦикла;
	
	Объект.Метки.Очистить();
	Элементы.Метки.ТекущаяСтрока = Неопределено;
	ОбновитьФорму();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьКарту(Команда)
	
	ИницализацияКарты = Ложь;
	НеОбрабатыватьАктивациюСтроки = Истина;
	Элементы.ЯндексКарта.Документ.parentWindow.eval("if(theMap){theMap.destroy();theMap=null;}");
	ИнициализацияЯндексКарты();
	НеОбрабатыватьАктивациюСтроки = Ложь;

КонецПроцедуры



