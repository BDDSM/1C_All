Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг");
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", НСтр("ru = 'Акт об оказании услуг 2012'"));
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", НСтр("ru = 'Акт об оказании услуг 2012'"));	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд,
		НСтр("ru = 'Акт об оказании услуг 2012'"),
		"Акт об оказании услуг 2012",
		"ВызовСерверногоМетода",
		Истина,
		"ПечатьMXL");
		
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции // СведенияОВнешнейОбработке()

Функция ПолучитьТаблицуКоманд()
  Команды = Новый ТаблицаЗначений;
  Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
  Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
  Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры


Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт об оказании услуг 2012") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"Акт об оказании услуг 2012",
			"Акт об оказании услуг 2012",
			ПечатьАктаОбОказанииУслуг2012(МассивОбъектов, ОбъектыПечати),
			,
			);
	КонецЕсли;

КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАктаОбОказанииУслуг2012(МассивОбъектов, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		ВыводитьКоды    = Ложь;
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;
	
	Если ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	КонецЕсли;
	
	ЗапросШапка = Новый Запрос;
	ЗапросШапка.УстановитьПараметр("ТекущийДокумент", МассивОбъектов[0]);
	ЗапросШапка.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата,
	|	ДоговорКонтрагента,
	|	ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Контрагент КАК Получатель,
	|	Организация КАК Поставщик,
	|	Организация,
	|	СуммаДокумента,
	|	ВалютаДокумента,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
	Шапка = ЗапросШапка.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ЗапросУслуги = Новый Запрос;
	ЗапросУслуги.УстановитьПараметр("ТекущийДокумент", МассивОбъектов[0]);
	ЗапросУслуги.УстановитьПараметр("Курс",            ЗаполнениеДокументов.КурсДокумента(МассивОбъектов[0],      ВалютаРегламентированногоУчета));
	ЗапросУслуги.УстановитьПараметр("Кратность",       ЗаполнениеДокументов.КратностьДокумента(МассивОбъектов[0], ВалютаРегламентированногоУчета));
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("РеализацияТоваровУслуг");
	
	ЗапросУслуги.Текст =
	"ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Товар,
	|	Номенклатура." + ТекстКодАртикул + " КАК КодАртикул,
	|	Количество,
	|	ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
	|	Цена * &Курс / &Кратность КАК Цена,
	|	Сумма * &Курс / &Кратность КАК Сумма,
	|	СтавкаНДС,
	|	СуммаНДС * &Курс / &Кратность КАК СуммаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|	И
	|	РеализацияТоваровУслуг.Номенклатура.Услуга = Истина
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	Номенклатура." + ТекстКодАртикул + " КАК КодАртикул,
	|	Количество,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Цена * &Курс / &Кратность КАК Цена,
	|	Сумма * &Курс / &Кратность КАК Сумма,
	|	СтавкаНДС,
	|	СуммаНДС * &Курс / &Кратность КАК СуммаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	" + ЧастьЗапросаДляВыбораСодержанияУслуг + ",
	|	Номенклатура." + ТекстКодАртикул + " КАК КодАртикул,
	|	Количество,	
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Цена * &Курс / &Кратность КАК Цена,
	|	Сумма * &Курс / &Кратность КАК Сумма,
	|	СтавкаНДС,
	|	СуммаНДС * &Курс / &Кратность КАК СуммаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.АгентскиеУслуги КАК РеализацияТоваровУслуг
	|
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ТекущийДокумент";
	ТаблицаУслуги = ЗапросУслуги.Выполнить().Выгрузить();
	
	
	Если МассивОбъектов[0].Проведен И (Шапка.РасчетыВУсловныхЕдиницах
		ИЛИ (Шапка.ВалютаДокумента <> ВалютаРегламентированногоУчета И МассивОбъектов[0].Дата >= '20090101000000')) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", МассивОбъектов[0]);
		Запрос.УстановитьПараметр("СчетУчетаРасчетовСКонтрагентом", МассивОбъектов[0].СчетУчетаРасчетовСКонтрагентом);
		Текст = 
		"ВЫБРАТЬ
		|	СУММА(Хозрасчетный.Сумма) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Регистратор = &Ссылка
		|	И Хозрасчетный.СчетДт = &СчетУчетаРасчетовСКонтрагентом
		|	И Хозрасчетный.СчетКт В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				РеализацияТоваровУслугТовары.СчетДоходов
		|			ИЗ
		|				Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|			ГДЕ
		|				РеализацияТоваровУслугТовары.Ссылка = &Ссылка
		|
		|           ОБЪЕДИНИТЬ
		|
		|			ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				РеализацияТоваровУслугУслуги.СчетДоходов
		|			ИЗ
		|				Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|			ГДЕ
		|				РеализацияТоваровУслугУслуги.Ссылка = &Ссылка)
		|";
		Запрос.Текст = Текст;
		СуммаВзаиморасчетов = Запрос.Выполнить().Выгрузить()[0].Сумма;
		
		РасчетСуммыНДСПоСтавке =  УчетНДС.РасчетНДСвРубляхПоСтавкеДокумента(Шапка.Дата);
		
		Если НЕ СуммаВзаиморасчетов = NULL Тогда
			
			ТаблицаУслуги.Колонки.Добавить("СуммаБезНДС");
			
			МассивРаспределения = Новый Массив;
			
			Для Каждого СтрокаТовар Из ТаблицаУслуги Цикл
				
				СуммаСНДС = СтрокаТовар.Сумма + ?(Шапка.СуммаВключаетНДС, 0, СтрокаТовар.СуммаНДС);
				СуммаБезНДС = СуммаСНДС - СтрокаТовар.СуммаНДС;
				
				МассивРаспределения.Добавить(СуммаСНДС);
				СтрокаТовар.СуммаБезНДС = СуммаБезНДС;
				
			КонецЦикла;
			
			ТаблицаУслуги.Колонки.Добавить("СуммаРублевая");
			УчетНДС.РаспределитьСуммуПоСтолбцу(МассивРаспределения, СуммаВзаиморасчетов, ТаблицаУслуги, "СуммаРублевая");
			
			Для Каждого СтрокаТовар Из ТаблицаУслуги Цикл
				
				Если РасчетСуммыНДСПоСтавке Тогда
					//Выделение суммы НДС, Расчет суммы без НДС
					ЗначениеСтавкиНДС = УчетНДС.ПолучитьСтавкуНДС(СтрокаТовар.СтавкаНДС);
					
					СтрокаТовар.СуммаНДС = ?(ЗначениеСтавкиНДС = 0, 0, Окр(СтрокаТовар.СуммаРублевая * ЗначениеСтавкиНДС/(100+ЗначениеСтавкиНДС),2));
					СтрокаТовар.Сумма = СтрокаТовар.СуммаРублевая - СтрокаТовар.СуммаНДС;
					
				Иначе
					МассивРаспределения.Очистить();
					МассивРаспределения.Добавить(СтрокаТовар.СуммаБезНДС);
					МассивРаспределения.Добавить(СтрокаТовар.СуммаНДС);
					МассивРаспределенныхСумм = ОбщегоНазначения.РаспределитьПропорционально(СтрокаТовар.СуммаРублевая, МассивРаспределения);
					Если МассивРаспределенныхСумм <> Неопределено Тогда
						СтрокаТовар.Сумма = МассивРаспределенныхСумм[0];
						СтрокаТовар.СуммаНДС = МассивРаспределенныхСумм[1];
					КонецЕсли;
				КонецЕсли;
				
				Если Шапка.СуммаВключаетНДС Тогда
					СтрокаТовар.Сумма = СтрокаТовар.Сумма+СтрокаТовар.СуммаНДС;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт";
	Макет       = ПолучитьМакет("Акт");
	
	
	//+Договор SnT
	ОбластьМакета = Макет.ПолучитьОбласть ("Договор");
	//ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОДоговореНазваниеД = МассивОбъектов[0].ДоговорКонтрагента.Наименование;
	
	НомерSnT =  МассивОбъектов[0].ДоговорКонтрагента.Номер;
	Если ЗначениеЗаполнено (НомерSnT) Тогда
		НомерSnT =  "№ " + Формат(НомерSnT, "ЧДЦ=0"); 
		СведенияОДоговореНомерД = НомерSnT;
	ИначеЕсли  Не ЗначениеЗаполнено (НомерSnT) Тогда
	КонецЕсли;
	
	ДатаSnT = МассивОбъектов[0].ДоговорКонтрагента.Дата ;
	Если ЗначениеЗаполнено (ДатаSnT) Тогда
		ДатаSnT = "от " + Формат(ДатаSnT, "ДЛФ=DD"); 
		СведенияОДоговореДатаД = ДатаSnT;
	ИначеЕсли  Не ЗначениеЗаполнено (ДатаSnT) Тогда
	КонецЕсли; 
	
	ДатаДок = МассивОбъектов[0].Дата;                    	
	ДатаДок =  Формат(ДатаДок, "ДЛФ=DD"); 
	ОбластьМакета.Параметры.ДатаДок = ДатаДок;
	
	//ОбластьМакета.Параметры.НазваниеД = СведенияОДоговореНазваниеД ;
	ОбластьМакета.Параметры.НомерД = СведенияОДоговореНомерД ;
	ОбластьМакета.Параметры.ДатаД = СведенияОДоговореДатаД ;
	ТабДокумент.Вывести(ОбластьМакета);
	//-Договор SnT ////////////////////////////////////
	
	
	
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	
	Дата = МассивОбъектов[0].Дата;
	Строка = "";
	Строка = Строка + Формат(Дата,"ДФ=""ММММ гггг""");
	ОбластьМакета.Параметры.ТекущийМесяц = Строка +" "+ " г.";
	ОбластьМакета.Параметры.НомерД = СведенияОДоговореНомерД ;
	ОбластьМакета.Параметры.ДатаД = СведенияОДоговореДатаД ;
	
	//Получаем наименование, должность, фио контрагента
	СведенияОКонтрагенте    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата);
	ОбластьМакета.Параметры.ПредставлениеПолучателя = МассивОбъектов[0].Контрагент.НаименованиеПолное; 
	
	ПредставительПолучателя = МассивОбъектов[0].Контрагент.ОсновноеКонтактноеЛицо;
	
	//Преобразовываем ФИО в ФИО родительный падеж
	ПредставительПолучателяФамилия = СтрЗаменить(ПредставительПолучателя.Фамилия, " ", "");
	//ПредставительПолучателяФамилияРодительныйПадеж = РодительныйПадеж(ПредставительПолучателяФамилия);
	ПредставительПолучателяФамилияРодительныйПадеж = "";
	Результат = Неопределено;
	Если СклонениеПредставленийОбъектов.ПросклонятьФИОСПомощьюКомпоненты(ПредставительПолучателяФамилия, 2, Результат, 1) Тогда
		ПредставительПолучателяФамилияРодительныйПадеж = Результат;
	КонецЕсли;
	
	Если ПредставительПолучателяФамилияРодительныйПадеж = "" И Не ПредставительПолучателя.Пустая() Тогда 
		Сообщить("Функция склонения фамилии будет отключена!");
		ПредставительПолучателяФамилияРодительныйПадеж = ПредставительПолучателя.Фамилия;
	КонецЕсли;
	ПредставительПолучателяРодительныйПадеж = ПредставительПолучателяФамилияРодительныйПадеж + " " + Лев(СокрЛП(ПредставительПолучателя.Имя),1) + 
	"." + Лев(СокрЛП(ПредставительПолучателя.Отчество),1) + ".";
	
	Если ПредставительПолучателя.Пустая() Тогда
	
		ПредставительПолучателяРодительныйПадеж = "____________________";
	
	КонецЕсли; 
	
	ОбластьМакета.Параметры.ПредставительПолучателя = ПредставительПолучателяРодительныйПадеж ;
    	
	Должность = МассивОбъектов[0].Контрагент.ОсновноеКонтактноеЛицо.Должность;
	ОбластьМакета.Параметры.Должность = Должность ;
	
	//////Получаем наименование, должность, фио контрагента
	
	
	//Выводим сумму цифрой и сумму прописью, и подписи
	Сумма    = ТаблицаУслуги.Итог("Сумма");	
	СуммаНДС = ТаблицаУслуги.Итог("СуммаНДС");
	
	ОбластьМакета.Параметры.Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма);
	
	СуммаКПрописи = Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
	
	ОбластьМакета.Параметры.СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, ВалютаРегламентированногоУчета);
	
	//ОбластьМакета.Параметры.Поставщик = Шапка.Поставщик;
	
	//	  //////Выводим сумму цифрой и сумму прописью
	
	ТабДокумент.Вывести(ОбластьМакета);
	

	Возврат ТабДокумент;
	
КонецФункции

  //Преобразовываем Фамилию контактного лица в родительный падеж
//Функция РодительныйПадеж(Фамилия)
//	Попытка 
//		Компонента = "NameDecl.dll";
//		ЗагрузитьВнешнююКомпоненту(Компонента);
//		КомпонентСклонения = Новый("AddIn.NameDeclension");
//	Исключение
//		Сообщить("Не удалось загрузить внешнюю компоненту склонения имен по причине: " + ОписаниеОшибки());
//		Сообщить("Обратитесь к системному администратору для регистрации компоненты NAMEDECL.DLL!");
//		Возврат "";
//	КонецПопытки;
//	
//	НомерСклонения = 2; // Родительный падеж 
//	ТекстВРодительном = КомпонентСклонения.Просклонять(Фамилия,НомерСклонения);
//		
//	Возврат ТекстВРодительном; 	
//	
//КонецФункции

