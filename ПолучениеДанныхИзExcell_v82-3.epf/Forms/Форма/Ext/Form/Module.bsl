Перем СписокСтрок;
Перем ВременныйКаталог;
Перем Лист;

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ Файл.Существует() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден файл!", Объект, "ПутьКФайлу", Истина);
		Возврат;
	КонецЕсли;
	
	Состояние("Загрузка файла...");
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлу));
	ПрочитатьФайл(Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайл(Адрес)
	
	ЛистЭкcеля.Очистить();
	
	ВремФайл = ПолучитьИмяВременногоФайла("xlsx");
	ДД = ПолучитьИзВременногоХранилища(Адрес);
	ДД.Записать(ВремФайл);
	
	Если НЕ ОткрытьФайлОбъект(ВремФайл) Тогда
		Сообщить("Файл " + ПутьКФайлу + " не открыт!");
		УдалитьФайлы(ВремФайл);
		Возврат;
	КонецЕсли;
	
	Если НЕ ОткрытьЛист(1) Тогда
		Сообщить("Лист 1 не открыт!");
		УдалитьФайлы(ВремФайл);
		Возврат;
	КонецЕсли;
	
	УдалитьФайлы(ВремФайл)
	
КонецПроцедуры

&НаСервере
Функция ОткрытьФайлОбъект(ПутьКФайлу)
	
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ Файл.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ФайлЭкзель = ПутьКФайлу;
	ВременныйКаталог = КаталогВременныхФайлов() + "\Excel2007";
	УдалитьФайлы(ВременныйКаталог);
	
	РаспаковатьФайл(ФайлЭкзель, ВременныйКаталог);
	
	ФайлСтрок = ВременныйКаталог + "\xl\sharedStrings.xml";
	СписокСтрок = ПрочитатьСписокСтрок(ФайлСтрок);
	
	Возврат Истина
	
КонецФункции

&НаСервере
Процедура РаспаковатьФайл(Файл, Каталог)
	
	Зип = Новый ЧтениеZipФайла;
	Зип.Открыть(Файл);
	Зип.ИзвлечьВсе(Каталог, РежимВосстановленияПутейФайловZIP.Восстанавливать)
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьСписокСтрок(ФайлСтрок)
	
	Строки = Новый СписокЗначений;
	
	хмл = Новый ЧтениеXML;
	хмл.ОткрытьФайл(ФайлСтрок);
	
	Пока хмл.Прочитать() Цикл
		Если хмл.ТипУзла = ТипУзлаXML.Текст Тогда
			Строки.Добавить(хмл.Значение);
		КонецЕсли;
	КонецЦикла;
	
	хмл.Закрыть();
	
	Возврат Строки
	
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеИКАО(ИКАО)
		
	СпрКодИКАО = Справочники.ИКАО_ВС.НайтиПоКоду(ИКАО);
	
	Если СпрКодИКАО.Пустая() Тогда 
		ЭлементСпрИКАО = Справочники.ИКАО_ВС.СоздатьЭлемент();
		ЭлементСпрИКАО.Код = ИКАО;
		ЭлементСпрИКАО.Наименование = ИКАО; 
		Попытка
			ЭлементСпрИКАО.Записать();
			Возврат ЭлементСпрИКАО 
		Исключение
		КонецПопытки;
	Иначе 
		Возврат СпрКодИКАО 
	КонецЕсли

КонецФункции 

&НаСервере
Функция ПроверкаСправочникаПоТипуВС(НаименованиеВС,ИКАО)

	СпрТипВС = Справочники.ТипыВС.НайтиПоНаименованию(НаименованиеВС,Истина);	

	Если СпрТипВС.Пустая() Тогда 
		ЭлементСпр = Справочники.ТипыВС.СоздатьЭлемент();
		ЭлементСпр.Владелец = ПолучитьНаименованиеИКАО(ИКАО); 
		ЭлементСпр.УстановитьНовыйКод("NJ-");
		ЭлементСпр.Наименование = НаименованиеВС;
		ЭлементСпр.КрейсерскаяСкорость = 100;
			Попытка
				ЭлементСпр.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
	КонецЕсли;
	
	Сообщить("" + НаименованиеВС + "  " + ИКАО);
	
КонецФункции

&НаСервере
Функция ПолучитьДеревоДанных(Файл)
	
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Объект");
	ДеревоДанных.Колонки.Добавить("Значение");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(Файл);
	
	ТекЭлемент = Неопределено;
	ТекБаза = Неопределено;
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			РежимЗагрузки = ЧтениеXML.Имя;
			
			Если ТекЭлемент = Неопределено Тогда
				ТекЭлемент = ДеревоДанных.Строки.Добавить();
				ТекЭлемент.Объект = РежимЗагрузки;
			Иначе
				ТекЭлемент = ТекЭлемент.Строки.Добавить();
				ТекЭлемент.Объект = РежимЗагрузки;					
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ТекЭлемент = Неопределено Тогда
				ТекЭлемент = Неопределено;
			Иначе
				ТекЭлемент = ТекЭлемент.Родитель;
			КонецЕсли;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			ТекЭлемент.Значение = ЧтениеXML.Значение;
		КонецЕсли;
		
		Для сч = 0 По ЧтениеXML.КоличествоАтрибутов() - 1 Цикл
			Стр = ТекЭлемент.Строки.Добавить();
			Стр.Объект = ЧтениеXML.ИмяАтрибута(сч);
			Стр.Значение = ЧтениеXML.ЗначениеАтрибута(сч);
		КонецЦикла;
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат ДеревоДанных
	
КонецФункции

&НаСервере
Функция ПолучитьМассивБукв()
	
	МассивБукв = Новый Массив;
		МассивБукв.Добавить("A");
		МассивБукв.Добавить("B");
		МассивБукв.Добавить("C");
		МассивБукв.Добавить("D");
		МассивБукв.Добавить("E");
		МассивБукв.Добавить("F");
		МассивБукв.Добавить("G");
		МассивБукв.Добавить("H");
		МассивБукв.Добавить("I");
		МассивБукв.Добавить("J");
		МассивБукв.Добавить("K");
		МассивБукв.Добавить("L");
		МассивБукв.Добавить("M");
		МассивБукв.Добавить("N");
		МассивБукв.Добавить("O");
		МассивБукв.Добавить("P");
		МассивБукв.Добавить("Q");
		МассивБукв.Добавить("R");
		МассивБукв.Добавить("S");
		МассивБукв.Добавить("T");
		МассивБукв.Добавить("U");
		МассивБукв.Добавить("V");
		МассивБукв.Добавить("W");
		МассивБукв.Добавить("X");
		МассивБукв.Добавить("Y");
		МассивБукв.Добавить("Z");
	
	Возврат МассивБукв
	
КонецФункции

&НаСервере
Функция ОткрытьЛист(НомерЛиста) Экспорт
	
	ФайлЛиста = ВременныйКаталог + "\xl\worksheets\sheet" + НомерЛиста + ".xml";
	Файл = Новый Файл(ФайлЛиста);
	Если НЕ Файл.Существует() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивБукв = ПолучитьМассивБукв();
	ДеревоДанных = ПолучитьДеревоДанных(ФайлЛиста);
	//ДеревоДанных.ВыбратьСтроку();
	
	Лист = Новый ТаблицаЗначений;
	
	//создаем колонки
	Колонки = ДеревоДанных.Строки.Найти("cols", "Объект", Истина);
	сч = 0;	
	Для Каждого Стр Из Колонки.Строки Цикл
		Если Стр.Объект <> "col" Тогда
			Продолжить;
		КонецЕсли;
		
		Лист.Колонки.Добавить(МассивБукв[сч]);
		сч = сч + 1;
				Лист.Колонки.Добавить(МассивБукв[сч]);

	КонецЦикла;
	
	//читаем строки
	СтрСтрок = ДеревоДанных.Строки.Найти("sheetData", "Объект", Истина);
	Для Каждого Строка Из СтрСтрок.Строки Цикл
		НоваяСтрока = Лист.Добавить();
		
		ИндексСтроки = -1;
		Для Каждого Колонка Из Строка.Строки Цикл
			Если Колонка.Объект <> "c" Тогда
				Продолжить;
			КонецЕсли;
			
			ЗначениеЯчейки = Неопределено;
			ИндексСтроки = ИндексСтроки + 1;
			
			СтрЗначение = Колонка.Строки.Найти("v", "Объект");
			Если СтрЗначение <> Неопределено Тогда
				ЗначениеЯчейки = СтрЗначение.Значение;
			КонецЕсли;
			
			СтрЗначение = Колонка.Строки.Найти("t", "Объект");
			Если СтрЗначение <> Неопределено И СтрЗначение.Значение = "s" И ЗначениеЯчейки <> Неопределено Тогда
				ЗначениеЯчейки = СписокСтрок.Получить(Число(ЗначениеЯчейки)).Значение;
			КонецЕсли;
			
				// если 1е поле то это наименование Типа ВС
				// если 2е поле то это код icao
				// ИКАО (от англ. ICAO — International Civil Aviation Organization) — Международная организация гражданской авиации. http://www.icao.int
				Если МассивБукв[ИндексСтроки] = "A" Тогда 
					НаименованиеТипаВС  = СокрЛ(ЗначениеЯчейки)
				ИначеЕсли МассивБукв[ИндексСтроки] = "B" Тогда 
					КодИКАО = ЗначениеЯчейки;
					ПроверкаСправочникаПоТипуВС(НаименованиеТипаВС,КодИКАО)
				КонецЕсли;
				
		КонецЦикла;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗаписатьФайл(Команда)
	ВремФайл = ПолучитьИмяВременногоФайла("xlsx");
	Адрес = СформироватьТестовыйФайл(ВремФайл);
	ДД = ПолучитьИзВременногоХранилища(Адрес);
	ДД.Записать(ВремФайл);
	
	ЗапуститьПриложение(ВремФайл);
КонецПроцедуры

&НаСервере
Функция СформироватьТестовыйФайл(Файл)
	ВремФайл = ПолучитьИмяВременногоФайла("xlsx");
	
	//заполняем ТЗ
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("К1");
	ТЗ.Колонки.Добавить("К2");
	
	Стр = ТЗ.Добавить();
	Стр.К1 = "Номенклатура";
	Стр.К2 = "Количество";
	
	Стр = ТЗ.Добавить();
	Стр.К1 = "Хлеб";
	Стр.К2 = 10;
	
	Стр = ТЗ.Добавить();
	Стр.К1 = "Мясо";
	Стр.К2 = 14;
	
	//сохраняем тз в экзель
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.Лист = ТЗ;
	ТекОбъект.Записать(ВремФайл);
	
	Возврат ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ВремФайл));
КонецФункции

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = "c:\";
	Диалог.Фильтр = "Файл Excel 2007 (*.xlsx)|*.xlsx";
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры
